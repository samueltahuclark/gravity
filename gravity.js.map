{"version":3,"sources":["gravity.coffee"],"names":[],"mappings":"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","file":"gravity.js","sourcesContent":["pi = Math.PI\nsqrt = Math.sqrt\nlog = Math.log10\npow = Math.pow\nAU = 149597870700  # meters\nG = 6.67408e-11  # Gravitational constant, m3/kg/s^2\n\n# {pi, sqrt, log, pow} = Math\n\nacceleration = (m, d) -> G*m/(d*d)  # meter/s^2, m is for other body\n\nclass Body\n  \n  dims: [\"x\", \"y\"]\n  \n  constructor: (@spec) ->\n    {@canvas, @name, @radius, @color, mass, @massDev, @position, @velocity} = @spec\n    @initMass = mass\n    @radius ?= 10\n    @massDev ?= 3\n    @setMass mass\n    @addSlider()\n    @resetForce()\n    @draw()\n    #console.log this\n    \n  addSlider: ->\n    \n    container = $(\".slider-container\")\n    container.append \"<p>#{@name}</p>\"\n    \n    #console.log \"dev\", @massDev\n    \n    center = log(@mass)\n    dev = @massDev\n    \n    slider = $ \"<input>\",\n      type: \"range\"\n      min: center - dev\n      max: center + dev\n      value: center\n      step: 0.01\n    container.append slider\n    \n    slider.on \"input change\", =>\n      #console.log slider.val()\n      @setMass pow(10, slider.val())\n      #console.log mass\n      \n  setMass: (@mass) ->\n    # If radius is 100x bigger, vol is V bigger.  What is V?\n    # If vol is 1e6 bigger, radius is x bigger\n    #@radius = log(@mass) * 2\n    #@radius = 10\n    r = 2*((log(@mass / @initMass) / @massDev + 2))  #Math.ceil(pow(@mass, 1/ 3) / 1e9)\n    \n    @lineWidth = r\n    \n    #console.log r\n    #@radius = r\n    \n    # V^(1/3)\n    \n    \n  draw: ->\n    @canvas.circle @position.x, @position.y, @radius, @color, @lineWidth\n    \n  move: (t) ->\n    for dim in @dims\n      @velocity[dim] += @acceleration[dim] * t\n      @position[dim] += @velocity[dim] * t\n    @draw()\n  \n  distanceTo: (body) ->\n    distance = {}\n    sumSq = 0\n    for dim in @dims\n      d = body.position[dim] - this.position[dim]\n      distance[dim] = d\n      sumSq += d**2\n    distance.d = sqrt(sumSq)\n    distance\n    \n  accelerationFrom: (body) ->\n    mass = body.mass\n    distance = @distanceTo body\n    #console.log \"dx, dy, distance\", body.name, distance.x/AU, distance.y/AU, distance.d/AU\n    d = distance.d\n    a = acceleration(mass, d)\n    accel = {a}\n    for dim in @dims\n      accel[dim] = a * distance[dim]/d\n    #console.log \"accel from #{body.name}\", accel.a, accel.x, accel.y\n    accel\n    \n  resetForce: ->\n    @acceleration = {x: 0, y: 0}\n    \n  accumulateForce: (body) ->\n    a = @accelerationFrom body\n    for dim in @dims\n      @acceleration[dim] += a[dim]\n    \n  forces: (bodies) ->\n    \n    #console.log \"===This body===\", this.name\n    \n    @resetForce()\n    for body in bodies\n      continue if body.name is @name\n      @accumulateForce body\n    \n    #console.log \"acceleration\", @acceleration\n      \n\nclass System\n  \n  scale: 100/AU   # Pixels per astronomical unit\n  timeStep: 24 * 3600\n  snapshotDelay: 0 # 500\n  numSteps: 10000   # Infinity\n  \n  constructor: (canvasSel) ->\n    @canvas = new Canvas {selector: canvasSel, @scale}\n    @bodies = []\n  \n  add: (spec) ->\n    spec.canvas = @canvas\n    body = new Body spec\n    @bodies.push body\n    body\n  \n  start: ->\n    @step = 0\n    @next()\n  \n  next: ->\n    @step++\n    return if @step>@numSteps\n    setTimeout (=> @frame()), @snapshotDelay\n  \n  frame: ->\n    window.requestAnimationFrame =>\n      @canvas.clear()\n      @snapshot()\n      @next()\n    \n  snapshot: ->\n    \n    for body in @bodies\n      body.forces(@bodies)\n    \n    for body in @bodies\n      body.move(@timeStep)\n\n\nclass Canvas\n  \n  constructor: (@spec) ->\n    {@selector, @scale} =  @spec\n    @canvas = $(@selector)[0]\n    @ctx = @canvas.getContext \"2d\"\n    @width = @canvas.width\n    @height = @canvas.height\n  \n  clear: ->\n    @ctx.clearRect 0, 0, @width, @height\n    \n  translate: (x, y) ->\n    x = @width/2 + @scale*x\n    y = @height/2 - @scale*y\n    @ctx.translate x, y\n    \n  circle: (x, y, r, color=\"black\", lineWidth=1) ->\n    \n    @ctx.save()\n    \n    @translate x, y\n    \n    @ctx.beginPath()\n    \n    startAngle = 0\n    endAngle = 2*pi\n    counterClockwise = false\n    \n    @ctx.strokeStyle = color\n    @ctx.lineWidth = lineWidth\n    # ctx.fillStyle = \"white\"\n    \n    @ctx.arc 0, 0, r, startAngle, endAngle, counterClockwise\n    @ctx.stroke()\n    #ctx.fill()\n    \n    @ctx.restore()\n\n\nclass App\n  \n  constructor: ->\n    \n    @system = new System \"#gravity-canvas\"\n    \n    @system.add\n      name: \"Sun\"\n      radius: 30\n      color: \"#f4bc42\"\n      mass: 1.989e30 # kg\n      massDev: 1\n      position: {x: 0, y: 0}  # m\n      velocity: {x: 0, y: 0}  # m/s\n      \n    @system.add\n      name: \"Venus\"\n      radius: 7\n      color: \"#90a346\"\n      mass: 4.867e24\n      position: {x: 0.723*AU, y: 0}\n      velocity: {x: 0, y: -35000}\n    \n    earth = @system.add\n      name: \"Earth\"\n      radius: 5\n      color: \"blue\"  # red\n      mass: 5.972e24 * 900\n      massDev: 3\n#      mass: 5.972e24\n      position: {x: -1*AU, y: 0}\n#      velocity: {x: 0, y: 0}\n      velocity: {x: 0, y: 29780}\n      \n    @system.add\n      name: \"Moon\"\n      radius: 1\n      color: \"#555\"\n      mass: 7.342e22 * 1000\n      massDev: 3\n#      mass: 7.342e22\n      position: {x: earth.position.x+0.06*AU, y: 0}\n#      position: {x: earth.position.x+0.00257*AU, y: 0}\n      velocity: {x: 0, y: earth.velocity.y + 7000}\n#      velocity: {x: 0, y: earth.velocity.y + 1022}\n    \n    @system.add\n      name: \"Mars\"\n      radius: 8\n      color: \"red\"\n      mass: 6.39e23\n      position: {x: -1.524*AU, y: 0*AU}\n      velocity: {x: 0, y: 24000}\n    #\n    # @system.add\n    #   name: \"Asteroid\"\n    #   radius: 1\n    #   mass: 1000\n    #   position: {x: -0.5*AU, y: 0*AU}\n    #   velocity: {x: 0, y: 50000}\n  \n    @system.start()\n\n\nnew App\n"]}